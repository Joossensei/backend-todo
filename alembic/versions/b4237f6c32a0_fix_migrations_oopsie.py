"""Fix migrations oopsie

Revision ID: b4237f6c32a0
Revises: c924bffa2328
Create Date: 2025-08-21 10:28:28.674130

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "b4237f6c32a0"
down_revision: Union[str, Sequence[str], None] = "c924bffa2328"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "statuses",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("user_key", sa.String(length=36), nullable=False),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("color", sa.String(length=36), nullable=False),
        sa.Column("icon", sa.String(length=36), nullable=False),
        sa.Column("is_default", sa.Boolean(), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_statuses")),
        sa.UniqueConstraint("key", name=op.f("uq_statuses_key")),
    )
    op.create_index(op.f("ix_statuses_id"), "statuses", ["id"], unique=False)
    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("username", sa.String(length=100), nullable=False),
        sa.Column("email", sa.String(length=100), nullable=False),
        sa.Column("hashed_password", sa.String(length=255), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=True),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_users")),
        sa.UniqueConstraint("key", name=op.f("uq_users_key")),
        sa.UniqueConstraint("username", name=op.f("uq_users_username")),
    )
    op.create_index("ix_user_key", "users", ["key"], unique=False)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)
    op.create_table(
        "priorities",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=36), nullable=False),
        sa.Column("name", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("color", sa.String(length=100), nullable=False),
        sa.Column("icon", sa.String(length=100), nullable=True),
        sa.Column("order", sa.Integer(), nullable=False),
        sa.Column("user_key", sa.String(length=36), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["user_key"], ["users.key"], name=op.f("fk_priorities_user_key_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_priorities")),
        sa.UniqueConstraint("key", name=op.f("uq_priorities_key")),
        sa.UniqueConstraint("user_key", "name", name="uq_priority_user_name"),
        sa.UniqueConstraint("user_key", "order", name="uq_priority_user_order"),
    )
    op.create_index(op.f("ix_priorities_id"), "priorities", ["id"], unique=False)
    op.create_index("ix_priority_user_key", "priorities", ["user_key"], unique=False)
    op.create_index(
        "ix_priority_user_key_key", "priorities", ["user_key", "key"], unique=False
    )
    op.create_table(
        "todos",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("key", sa.String(length=36), nullable=False),
        sa.Column("title", sa.String(length=100), nullable=False),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("completed", sa.Boolean(), nullable=True),
        sa.Column("priority", sa.String(length=36), nullable=False),
        sa.Column("user_key", sa.String(length=36), nullable=False),
        sa.Column("status", sa.String(length=36), nullable=False),
        sa.Column(
            "created_at",
            sa.DateTime(timezone=True),
            server_default=sa.text("now()"),
            nullable=True,
        ),
        sa.Column("updated_at", sa.DateTime(timezone=True), nullable=True),
        sa.ForeignKeyConstraint(
            ["priority"], ["priorities.key"], name=op.f("fk_todos_priority_priorities")
        ),
        sa.ForeignKeyConstraint(
            ["status"], ["statuses.key"], name=op.f("fk_todos_status_statuses")
        ),
        sa.ForeignKeyConstraint(
            ["user_key"], ["users.key"], name=op.f("fk_todos_user_key_users")
        ),
        sa.PrimaryKeyConstraint("id", name=op.f("pk_todos")),
        sa.UniqueConstraint("key", name=op.f("uq_todos_key")),
    )
    op.create_index("ix_todo_completed", "todos", ["completed"], unique=False)
    op.create_index("ix_todo_priority", "todos", ["priority"], unique=False)
    op.create_index("ix_todo_user_key", "todos", ["user_key"], unique=False)
    op.create_index(
        "ix_todo_user_key_completed", "todos", ["user_key", "completed"], unique=False
    )
    op.create_index("ix_todo_user_key_key", "todos", ["user_key", "key"], unique=False)
    op.create_index(
        "ix_todo_user_key_priority", "todos", ["user_key", "priority"], unique=False
    )
    op.create_index(
        "ix_todo_user_key_status", "todos", ["user_key", "status"], unique=False
    )
    op.create_index(op.f("ix_todos_id"), "todos", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_todos_id"), table_name="todos")
    op.drop_index("ix_todo_user_key_status", table_name="todos")
    op.drop_index("ix_todo_user_key_priority", table_name="todos")
    op.drop_index("ix_todo_user_key_key", table_name="todos")
    op.drop_index("ix_todo_user_key_completed", table_name="todos")
    op.drop_index("ix_todo_user_key", table_name="todos")
    op.drop_index("ix_todo_priority", table_name="todos")
    op.drop_index("ix_todo_completed", table_name="todos")
    op.drop_table("todos")
    op.drop_index("ix_priority_user_key_key", table_name="priorities")
    op.drop_index("ix_priority_user_key", table_name="priorities")
    op.drop_index(op.f("ix_priorities_id"), table_name="priorities")
    op.drop_table("priorities")
    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index("ix_user_key", table_name="users")
    op.drop_table("users")
    op.drop_index(op.f("ix_statuses_id"), table_name="statuses")
    op.drop_table("statuses")
    # ### end Alembic commands ###
